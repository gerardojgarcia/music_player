{"version":3,"sources":["player.js"],"names":["musicContainer","document","querySelector","playBtn","getElementById","prevBtn","nextBtn","audio","progress","progressContainer","title","cover","songLength","songs","songIndex","loadSong","song","innerText","src","playSong","classList","add","remove","play","pauseSong","pause","prevSong","length","nextSong","updateProgress","e","target","duration","progressPercent","currentTime","style","width","trackTime","showDuration","trackTimes","toFixed","trackDuration","trackLength","console","log","setProgress","clientWidth","clickX","offsetX","addEventListener","contains"],"mappings":";AAAA,IAAMA,EAAiBC,SAASC,cAAc,qBACxCC,EAAUF,SAASG,eAAe,QAClCC,EAAUJ,SAASG,eAAe,QAClCE,EAAUL,SAASG,eAAe,QAClCG,EAAQN,SAASG,eAAe,SAChCI,EAAWP,SAASC,cAAc,aAClCO,EAAoBR,SAASC,cAAc,8BAC3CQ,EAAQT,SAASG,eAAe,SAChCO,EAAQV,SAASG,eAAe,SAChCQ,EAAaX,SAASG,eAAe,aAKrCS,EAAQ,CACV,wBACC,kBACA,uBACD,oBACC,kCAKDC,EAAY,EAKhB,SAASC,EAASC,GACjBN,EAAMO,UAAYD,EACnBT,EAAMW,IAAiBF,WAAAA,OAAAA,EAAvB,QACCL,EAAMO,IAAkBF,YAAAA,OAAAA,EAAxB,QAKD,SAASG,IACLnB,EAAeoB,UAAUC,IAAI,QAC7BlB,EAAQD,cAAc,SAASkB,UAAUE,OAAO,WAChDnB,EAAQD,cAAc,SAASkB,UAAUC,IAAI,YAE7Cd,EAAMgB,OAGV,SAASC,IACLxB,EAAeoB,UAAUE,OAAO,QAChCnB,EAAQD,cAAc,SAASkB,UAAUE,OAAO,YAChDnB,EAAQD,cAAc,SAASkB,UAAUC,IAAI,WAE7Cd,EAAMkB,QAGV,SAASC,MACLZ,EAEgB,IACZA,EAAYD,EAAMc,OAAS,GAG/BZ,EAASF,EAAMC,IAEfK,IAIJ,SAASS,MACLd,EAEgBD,EAAMc,OAAS,IAC3Bb,EAAY,GAGhBC,EAASF,EAAMC,IACfK,IAIJ,SAASU,EAAeC,GACYA,IAAAA,EAAAA,EAAEC,OAA3BC,EAAAA,EAAAA,SAEDC,EAFWC,EAAAA,YAEsBF,EAAY,IAEnDxB,EAAS2B,MAAMC,MAAWH,GAAAA,OAAAA,EAA1B,KAzDJlB,EAASF,EAAMC,IA4Df,IAAIuB,EAAY,EAIhB,SAASC,EAAcR,GAEbO,IAAAA,EAAY9B,EAAM2B,YAAc,GAGhCK,EAAaF,EAAUG,QAAQ,GAC/BC,EAAgBlC,EAAMyB,SAAW,GACjCU,EAAcD,EAAcD,QAAQ,GAC1C5B,EAAWK,UAAYsB,EAAa,MAAQG,EAC5CC,QAAQC,IAAIP,EAAWI,GAE3B,SAASI,EAAYf,GACXM,IAAAA,EAAQ,KAAKU,YACbC,EAASjB,EAAEkB,QACXhB,EAAWzB,EAAMyB,SAEvBzB,EAAM2B,YAAea,EAASX,EAASJ,EACvCW,QAAQC,IAAIG,GAOhB5C,EAAQ8C,iBAAiB,QAAS,WACZjD,EAAeoB,UAAU8B,SAAS,QAGhD1B,IAEAL,IAGJmB,MAKJjC,EAAQ4C,iBAAiB,QAAS,WAC9BvB,IACAY,MAGJhC,EAAQ2C,iBAAiB,QAAS,WAC9BrB,IACAU,MAKJ/B,EAAM0C,iBAAiB,aAAcpB,GAIrCpB,EAAkBwC,iBAAiB,QAASJ,GAM5CtC,EAAM0C,iBAAiB,QAASrB,GAKhCrB,EAAM0C,iBAAiB,aAAcX","file":"player.39dca526.js","sourceRoot":"..","sourcesContent":["const musicContainer = document.querySelector('.music__container')\nconst playBtn = document.getElementById('play')\nconst prevBtn = document.getElementById('prev')\nconst nextBtn = document.getElementById('next')\nconst audio = document.getElementById('audio')\nconst progress = document.querySelector('.progress')\nconst progressContainer = document.querySelector('.music__container-progress')\nconst title = document.getElementById('title')\nconst cover = document.getElementById('cover')\nconst songLength = document.getElementById('tracktime')\n\n\n\n// Song Title Array\nconst songs = [ \n    'Telex - Moskow Diskow',\n     'Size - Olimpico', \n     'Valeria - Fairy Tale',\n    'Size - Esta Noche',\n     'Vandana - Cambios en el Tiempo'\n                            ]\n\n//Song Index\n\nlet songIndex = 0\n\nloadSong(songs[songIndex])\n\n\nfunction loadSong(song) {\n title.innerText = song\naudio.src = `./music/${song}.mp3`\n cover.src = `./images/${song}.png`\n\n}\n\n\nfunction playSong(){\n    musicContainer.classList.add('play')\n    playBtn.querySelector('i.fas').classList.remove('fa-play')\n    playBtn.querySelector('i.fas').classList.add('fa-pause')\n\n    audio.play()\n}\n\nfunction pauseSong() {\n    musicContainer.classList.remove('play')\n    playBtn.querySelector('i.fas').classList.remove('fa-pause')\n    playBtn.querySelector('i.fas').classList.add('fa-play')\n\n    audio.pause()\n}\n\nfunction prevSong () {\n    songIndex --\n\n    if (songIndex < 0) {\n        songIndex = songs.length - 1 \n    }\n\n    loadSong(songs[songIndex])\n\n    playSong()\n    \n}\n\nfunction nextSong() {\n    songIndex ++\n\n    if (songIndex > songs.length - 1) {\n        songIndex = 0\n    }\n\n    loadSong(songs[songIndex])\n    playSong()\n}\n\n\nfunction updateProgress(e) {\n    const {duration, currentTime} = e.target\n    \n    const progressPercent = (currentTime / duration) * 100\n\n    progress.style.width = `${progressPercent}%`\n}\n\nlet trackTime = 0\n\n    \n\nfunction showDuration (e){\n    \n    const trackTime = audio.currentTime / 60\n    \n\n    const trackTimes = trackTime.toFixed(2)\n    const trackDuration = audio.duration / 60\n    const trackLength = trackDuration.toFixed(2)\n    songLength.innerText = trackTimes + ' / ' + trackLength\n    console.log(trackTime, trackDuration)\n} \nfunction setProgress(e) {\n    const width = this.clientWidth\n    const clickX = e.offsetX\n    const duration = audio.duration \n\n    audio.currentTime = (clickX / width) * duration\n    console.log(clickX)\n}\n//Event Listeners\n\n\n//Play/Pause\n\nplayBtn.addEventListener('click', () => {\n    const isPlaying = musicContainer.classList.contains('play')\n\n    if (isPlaying) {\n        pauseSong()\n    } else {\n        playSong()\n    }\n\n    showDuration()\n})\n    \n//Forward/Pause\n\nprevBtn.addEventListener('click', () => {\n    prevSong()\n    showDuration()\n})\n\nnextBtn.addEventListener('click', () => {\n    nextSong()\n    showDuration()\n})\n\n//Progress Indicator\n\naudio.addEventListener('timeupdate', updateProgress)\n\n//Jump-To Progress\n\nprogressContainer.addEventListener('click', setProgress)\n\n\n\n//Continuous Play\n\naudio.addEventListener('ended', nextSong)\n\n\n// Track Time\n\naudio.addEventListener('timeupdate', showDuration)"]}